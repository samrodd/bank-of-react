{"version":3,"sources":["components/AccountBalance.js","components/Home.js","components/UserProfile.js","Login.js","App.js","reportWebVitals.js","index.js"],"names":["AccountBalance","this","props","accountBalance","Component","App","addDebit","e","preventDefault","console","log","target","value","debits","state","current","Date","currentDate","getFullYear","getMonth","getDate","newDescInput","newAmountVal","push","newAccountBalance","setState","addCredit","credits","parseFloat","mockLogIn","logInInfo","newUser","currentUser","userName","memberSince","newDescription","newAmount","a","axios","get","data","debitSum","creditSum","forEach","debit","amount","credit","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAIMA,E,4JACF,WACI,OACI,4CACcC,KAAKC,MAAMC,sB,GAJRC,aAUdJ,I,UCRQI,YCDGA,Y,SCDNA,Y,gBCMdC,E,kDACJ,aAAe,IAAD,8BACZ,gBAiCJC,SAAW,SAACC,GAEVA,EAAEC,iBAEFC,QAAQC,IAAIH,EAAEI,OAAO,GAAGC,OACxBH,QAAQC,IAAIH,EAAEI,OAAO,GAAGC,OACxB,IAAMC,EAAW,EAAKC,MAAhBD,OAEAE,EAAU,IAAIC,KAEdC,EAAW,UAAMF,EAAQG,cAAd,YAA+BH,EAAQI,WAAW,EAAlD,YAAuDJ,EAAQK,WAE1EC,EAAgBd,EAAEI,OAAO,GAAGC,MAC5BU,EAAef,EAAEI,OAAO,GAAGC,MAEjCC,EAAOU,KAAK,CAAC,GAAM,EAAG,YAAeF,EAAc,OAAUC,EAAc,KAAOL,IAElF,IAAIO,EAAoB,EAAKV,MAAMX,eAAiBmB,EAEpD,EAAKG,SAAS,CAACZ,OAAQA,EAAQV,eAAgBqB,KArDjC,EAyDdE,UAAY,SAACnB,GAEXA,EAAEC,iBAEFC,QAAQC,IAAIH,EAAEI,OAAO,GAAGC,OACxBH,QAAQC,IAAIH,EAAEI,OAAO,GAAGC,OAExB,IAAMe,EAAY,EAAKb,MAAjBa,QAEAZ,EAAU,IAAIC,KAEdC,EAAW,UAAMF,EAAQG,cAAd,YAA+BH,EAAQI,WAAW,EAAlD,YAAuDJ,EAAQK,WAE1EC,EAAgBd,EAAEI,OAAO,GAAGC,MAC5BU,EAAef,EAAEI,OAAO,GAAGC,MAEjCe,EAAQJ,KAAK,CAAC,GAAM,EAAG,YAAeF,EAAc,OAAUC,EAAc,KAAOL,IAEnF,IAAIO,EAAoB,EAAKV,MAAMX,eAAiByB,WAAWN,EAAa,IAE5E,EAAKG,SAAS,CAACE,QAASA,EAASxB,eAAgBqB,KA7ErC,EAiFdK,UAAY,SAACC,GACX,IAAMC,EAAO,eAAO,EAAKjB,MAAMkB,aAC/BD,EAAQE,SAAWH,EAAUG,SAC7B,EAAKR,SAAS,CAACO,YAAaD,KAjF5B,EAAKjB,MAAQ,CACXX,eAAgB,EAChB6B,YAAa,CACXC,SAAU,WACVC,YAAa,YAEfC,eAAgB,GAChBC,UAAW,GACXvB,OAAQ,GACRc,QAAS,IAZC,E,4FAgBd,oCAAAU,EAAA,sEACqBC,IAAMC,IAAI,wCAD/B,cACM1B,EADN,gBAEsByB,IAAMC,IAAI,yCAFhC,OAEMZ,EAFN,OAIEd,EAASA,EAAO2B,KAChBb,EAAUA,EAAQa,KACdC,EAAW,EAAGC,EAAY,EAC9B7B,EAAO8B,SAAQ,SAACC,GACdH,GAAYG,EAAMC,UAEpBlB,EAAQgB,SAAQ,SAACG,GACfJ,GAAaI,EAAOD,UAElB1C,EAAiBuC,EAAYD,EACjCxC,KAAKwB,SAAS,CAACZ,SAAQc,UAASxB,mBAdlC,iD,0EAuEA,WAOqBF,KAAKa,MAAhBD,OASYZ,KAAKa,MAAjBa,QAOR,OACE,6C,GAhHYvB,aAmIHC,ICjIA0C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.421b16c7.chunk.js","sourcesContent":["// src/components/AccountBalance.js\n\nimport React, {Component} from 'react';\n\nclass AccountBalance extends Component {\n    render(){\n        return(\n            <div>\n                Balance: {this.props.accountBalance}\n            </div>\n        );\n    }\n}\n\nexport default AccountBalance;","    // src/components/Home.js\n    \n    import React, { Component } from 'react';\n    import AccountBalance from './AccountBalance';\n    import {Link} from 'react-router-dom';\n    \n    class Home extends Component {\n      render() {\n        return (\n            <div>\n              <img src=\"https://letstalkpayments.com/wp-content/uploads/2016/04/Bank.png\" alt=\"bank\"/>\n              <h1>Bank of React</h1>\n              <Link to=\"/userProfile\">User Profile</Link><br/>\n              <Link to=\"/debits\">Debits</Link><br/>\n              <Link to=\"/credits\">Credits</Link><br/>\n\n              <Link to=\"/login\">Login</Link>\n\n              <AccountBalance accountBalance={this.props.accountBalance}/>\n            </div>\n        );\n      }\n    }\n    \n    export default Home;","// src/components/UserProfile.js\n\nimport React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nclass UserProfile extends Component{\n    render(){\n        return(\n            <div>\n                <h1>\n                    User Profile\n                </h1>\n                <div>Username: {this.props.userName}</div>\n                <div>Member Since: {this.props.memberSince}</div>\n                <Link to=\"/\">Return to Home</Link>\n\n            </div>\n        );\n    }\n}\n\nexport default UserProfile;\n","// Login.js\nimport React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\n\nclass LogIn extends Component {\n  constructor () {\n    super()\n    this.state = {\n      user: {\n        userName: '',\n        password: ''\n      },\n      redirect: false\n    }\n  }\n\n  handleChange = (e) => {\n    const updatedUser = {...this.state.user}\n    const inputField = e.target.name\n    const inputValue = e.target.value\n    updatedUser[inputField] = inputValue\n\n    this.setState({user: updatedUser})\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n    this.props.mockLogIn(this.state.user)\n    this.setState({redirect: true})\n  }\n\n  render () {\n    if (this.state.redirect) {\n      //send user to userProfile on redirect\n      return (<Redirect to=\"/userProfile\"/>)\n    }\n\n    return (\n      <div>\n        <h1>Bank of React Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div>\n            <label htmlFor=\"userName\">User Name</label>\n            <input type=\"text\" name=\"userName\" onChange={this.handleChange} value={this.state.user.userName} />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" name=\"password\" />\n          </div>\n          <button>Log In</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LogIn","import React, {Component} from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport Debits from './components/Debits';\nimport Credits from './components/Credits';\n\nimport LogIn from './Login';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {\n    super();\n  \n    this.state = {\n      accountBalance: 0,\n      currentUser: {\n        userName: 'joe_shmo',\n        memberSince: '07/23/96',\n      },\n      newDescription: '',\n      newAmount: '',\n      debits: [],\n      credits: []\n    }\n  }\n\n  async componentDidMount() {\n    let debits = await axios.get(\"https://moj-api.herokuapp.com/debits\")\n    let credits = await axios.get(\"https://moj-api.herokuapp.com/credits\")\n\n    debits = debits.data\n    credits = credits.data\n    let debitSum = 0, creditSum = 0;\n    debits.forEach((debit) =>{\n      debitSum += debit.amount\n    })\n    credits.forEach((credit) => {\n      creditSum += credit.amount\n    })\n    let accountBalance = creditSum - debitSum;\n    this.setState({debits, credits, accountBalance});\n  }\n\n\naddDebit = (e) => {\n  //send to debits view via props\n  e.preventDefault();\n//log target values \n  console.log(e.target[0].value);\n  console.log(e.target[1].value);\n  let { debits } = this.state;\n  //get the credits from state\n  const current = new Date();\n  //create current date with correct formatting from the date object above \n  const currentDate = `${current.getFullYear()}-${current.getMonth()+1}-${current.getDate()}`;\n  //create variables from user inputs\n  const newDescInput =  e.target[0].value; //this.state.newDescription;\n  const newAmountVal = e.target[1].value;//this.state.newAmount;\n  //push new value to array\n  debits.push({'id': 1, 'description': newDescInput, 'amount': newAmountVal, 'date':currentDate});\n  //update account balance\n  let newAccountBalance = this.state.accountBalance - newAmountVal;\n  //update state\n  this.setState({debits: debits, accountBalance: newAccountBalance});\n\n}\n\n  addCredit = (e) => {\n    //send to credits view via props\n    e.preventDefault();\n    //log target values \n    console.log(e.target[0].value);\n    console.log(e.target[1].value);\n    //get the credits from state\n    let { credits } = this.state;\n    //create date object\n    const current = new Date();\n    //create current date with correct formatting from the date object above \n    const currentDate = `${current.getFullYear()}-${current.getMonth()+1}-${current.getDate()}`;\n    //create variables from user inputs\n    const newDescInput =  e.target[0].value; \n    const newAmountVal = e.target[1].value;\n    //push new value to array\n    credits.push({'id': 1, 'description': newDescInput, 'amount': newAmountVal, 'date':currentDate});\n    //update account balance\n    let newAccountBalance = this.state.accountBalance + parseFloat(newAmountVal,10);\n    //update state\n    this.setState({credits: credits, accountBalance: newAccountBalance});\n\n  }\n\n  mockLogIn = (logInInfo) => {\n    const newUser = {...this.state.currentUser}\n    newUser.userName = logInInfo.userName\n    this.setState({currentUser: newUser})\n  }\n\n  render() {\n\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance.toFixed(2)}/>);\n    const UserProfileComponent = () => (\n      <UserProfile userName = {this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince}/>\n    );\n\n    const { debits } = this.state;\n    const DebitsComponent = () => (\n      <div>     \n        <Debits  accountBalance={this.state.accountBalance.toFixed(2)} addDebit={this.addDebit} debits={debits}/>\n\n      </div>\n     \n    );\n\n    const { credits } = this.state;\n\n    const CreditsComponent = () => (\n     <Credits accountBalance={this.state.accountBalance.toFixed(2)} addCredit={this.addCredit} credits={credits}/>\n    );\n\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn}/>)\n    return (\n      <div>POOOOP</div>\n        /*<Router>\n          <div>\n            <Route exact path=\"/bank-of-react\" render={HomeComponent}/>\n            <Route exact path=\"/bank-of-react/userProfile\" render={UserProfileComponent}/>\n            <Route exact path=\"/bank-of-react/login\" render={LogInComponent}/>\n            <Route exact path=\"/bank-of-react/debits\" render={DebitsComponent}/>\n            <Route exact path=\"/bank-of-react/credits\" render={CreditsComponent}/>\n          </div>\n        </Router>*/\n    );\n  }\n\n\n}\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}